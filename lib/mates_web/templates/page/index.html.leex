<%= if @notice do %>
  <p class="alert alert-info" role="alert"><%= @notice %></p>
<% end %>
<div class="row">
  <div class="column">
    <div id="scannedMembers" class="row standing-area">
      <ul class="lineup">
        <%= for dev <- @devs do %>
          <li>
            <div class="standing-spot">
              <div phx-click="click_dev" phx-value-developer="<%= dev.name %>" class="headshot-containter <%= if dev.pair > 0, do: "paired", else: "" %> <%= if @shuffled, do: "shuffled", else: "" %>">
                <img class="headshot" id="<%= headshot_position_id(dev)%>" src="<%= Routes.static_path(MatesWeb.Endpoint, dev.image) %>">
                <div class="headshot-text"><%= dev.pair %></div>
              </div>
              <div class="delete-button-container  <%= if @shuffled, do: "shuffled", else: "" %>">
                <button class="button delete-button" phx-click="delete_dev" phx-value-developer="<%= dev.name %>">Remove</button>
              </div>
            </div>
          </li>
        <% end %>
      </ul>
    </div>
    <%= if @number_of_pairs > 0 do %>
      <div id="seats" class="row pairs" phx-hook="Seats">
        <%= for pair_number <- 1..@number_of_pairs do %>
          <div class="pair <%= if @dashboard_pair == pair_number, do: "dashboard", else: ""  %>">
            <div class="row pair-label">
              Pair <%= pair_number %>
            </div>
            <div class="row">
              <div class="column">
                <div class="seat"></div>
              </div>
              <div class="column">
                <div class="seat"></div>
              </div>
            </div>
          </div>
        <% end %>
      </div>
    <% end %>
  </div>
</div>
<div class="row">
  <div class="button-container">
    <button id="shuffleButton" <%= if @shuffled, do: "disabled=disabled", else: nil %> class="button shuffle-button" phx-click="shuffle_pairs">Shuffle Pairs</button>
  </div>
</div>

<script type="text/javascript">
  document.addEventListener("seats-shuffled", () => {
    const seats = Array.from(document.getElementsByClassName("seat"))
    seats.forEach((seatElement, index) => {
      const devElement = document.getElementById(`position-${index}`)
      if(devElement) {
        const dev = devElement.getBoundingClientRect()
        const seat = seatElement.getBoundingClientRect()

        devElement.style.cssText = `transform: translate(${seat.x-dev.x}px, ${seat.y-dev.y}px); width: ${seat.width}px;`
      }
    })
  })
</script>